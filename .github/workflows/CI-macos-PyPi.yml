# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: CI-mac-os


on:
  push:
    branches: [ '*' ]
    paths-ignore:         # Don't trigger on files that are updated by the CI
      - README.md
  pull_request:
    branches: [ '*' ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    # run at 02:01 on the 3rd of each month
    - cron:  '1 2 3 * *'    

jobs:
  test:
    runs-on: macos-latest
    env:
      # gcc/gfrotran version
      version: 11
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install gfortran
      run: |
          brew install gcc@${version}
          ln -fs /usr/local/bin/gfortran-${version} /usr/local/bin/gfortran
          ln -fs /usr/local/bin/gcc-${version} /usr/local/bin/gcc
          ln -fs /usr/local/bin/g++-${version} /usr/local/bin/g++

          # link lib dir for previous GCC versions to avoid missing .dylib issues
          for (( i=12; i>4; i-- ))
          do
              gcc_lib_path="/usr/local/opt/gcc/lib/gcc/$i"
              if [ -d $gcc_lib_path ]; then
                echo "found $gcc_lib_path"
                for (( j=$i; j>4; j-- ))
                do
                  ln -fs /usr/local/opt/gcc/lib/gcc/$i /usr/local/opt/gcc/lib/gcc/$j
                done
                break
              fi
            done

            export FC="gfortran"
            export CC="gcc"
            export CXX="g++"
    - name: Check gfortran's version
      run: gfortran --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip pytest pytest-cov pytest-flakes setuptools
    - name: Install the package
      run: |
        pip install -v SILEXlight
        # Show f2py compiler info for debug
        f2py -c --help-fcompiler        
    - name: Run tests
      run: |
        pytest --pyargs SILEXlight.tests
